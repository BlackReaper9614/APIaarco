#pragma checksum "D:\Ejercicios de Entrvistas\ConsumirAPI\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e4e8a1ea476f18da6b91dbb5d5a13f2b66f95ae4"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Ejercicios de Entrvistas\ConsumirAPI\Views\_ViewImports.cshtml"
using ConsumirAPI;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Ejercicios de Entrvistas\ConsumirAPI\Views\_ViewImports.cshtml"
using ConsumirAPI.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e4e8a1ea476f18da6b91dbb5d5a13f2b66f95ae4", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8b47c964f94f5cf74ec0260856f8b1edd624674a", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<ConsumirAPI.Models.Marcas>
    #nullable disable
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "1", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "2", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "3", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 3 "D:\Ejercicios de Entrvistas\ConsumirAPI\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<div class=\"container bg-info\">\r\n    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e4e8a1ea476f18da6b91dbb5d5a13f2b66f95ae44502", async() => {
                WriteLiteral("\r\n        <div class=\"text-white p-2\">\r\n            <h3 class=\"text-center\">Vehículo</h3>\r\n\r\n            <div class=\"form-group row\">\r\n                ");
#nullable restore
#line 13 "D:\Ejercicios de Entrvistas\ConsumirAPI\Views\Home\Index.cshtml"
           Write(Html.LabelFor(model => model.sMarca, "Marca", htmlAttributes: new { @class = "control-label col-md-3 text-center marca", @id="marca" }));

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n                <div class=\"col-md-9\">\r\n                    ");
#nullable restore
#line 15 "D:\Ejercicios de Entrvistas\ConsumirAPI\Views\Home\Index.cshtml"
               Write(Html.DropDownList("Marca", null, htmlAttributes: new { @class = "form-control" }));

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n                    ");
#nullable restore
#line 16 "D:\Ejercicios de Entrvistas\ConsumirAPI\Views\Home\Index.cshtml"
               Write(Html.ValidationMessageFor(model => model.sMarca, "", new { @class = "text-danger" }));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
                </div>
            </div>

            <div class=""form-group row"">
                <label for=""submarca"" class=""col-sm-3 col-form-label text-center"">Sub-Marca:</label>
                <div class=""col-sm-9"">
                    <select class=""form-control"" id=""submarca"" name=""submarca"">
                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e4e8a1ea476f18da6b91dbb5d5a13f2b66f95ae46278", async() => {
                    WriteLiteral("Selecciona una Submarca");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                    </select>
                </div>
            </div>
            <div class=""form-group row"">
                <label for=""modelo"" class=""col-sm-3 col-form-label text-center"">Modelo:</label>
                <div class=""col-sm-9"">
                    <select class=""form-control"" id=""modelo"" name=""modelo"">
                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e4e8a1ea476f18da6b91dbb5d5a13f2b66f95ae47886", async() => {
                    WriteLiteral("Selecciona un Modelo");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                    </select>
                </div>
            </div>
            <div class=""form-group row"">
                <label for=""descripcion"" class=""col-sm-3 col-form-label text-center"">Descripción:</label>
                <div class=""col-sm-9"">
                    <select class=""form-control"" name=""descripcion"" id=""descripcion"">
                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e4e8a1ea476f18da6b91dbb5d5a13f2b66f95ae49511", async() => {
                    WriteLiteral("Selecciona una Descripción");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                    </select>
                </div>
            </div>

            <hr />

            <h3 class=""text-center"">Domicilio</h3>
            <div class=""form-group row"">
                <label for=""cp"" class=""col-sm-3 col-form-label text-center"">Código Postal:</label>
                <div class=""col-sm-9"">
                    <input class=""form-control"" id=""cp"" name=""cp"" onkeydown=""search(this)""/>
                </div>
            </div>
            <div class=""form-group row"">
                <label for=""estado"" class=""col-sm-3 col-form-label text-center"">Estado:</label>
                <div class=""col-sm-9"">
                    <input class=""form-control"" id=""estado"" name=""estado""");
                BeginWriteAttribute("placeholder", " placeholder=\"", 2610, "\"", 2624, 0);
                EndWriteAttribute();
                WriteLiteral(@" readonly />
                </div>
            </div>
            <div class=""form-group row"">
                <label for=""municipio"" class=""col-sm-3 col-form-label text-center"">Municipio:</label>
                <div class=""col-sm-9"">
                    <input class=""form-control"" id=""municipio"" name=""municipio""");
                BeginWriteAttribute("placeholder", " placeholder=\"", 2947, "\"", 2961, 0);
                EndWriteAttribute();
                WriteLiteral(@" readonly />
                </div>
            </div>
            <div class=""form-group row"">
                <label for=""colonia"" class=""col-sm-3 col-form-label text-center"">Colonia:</label>
                <div class=""col-sm-9"">
                    <input class=""form-control"" id=""colonia"" name=""colonia""");
                BeginWriteAttribute("placeholder", " placeholder=\"", 3276, "\"", 3290, 0);
                EndWriteAttribute();
                WriteLiteral(@" readonly />
                </div>
            </div>

            <h3 class=""text-center"">Persona</h3>
            <div class=""form-group row"">
                <label for=""cp"" class=""col-sm-3 col-form-label text-center"">Fecha de Nacimiento:</label>
                <div class=""col-sm-9"">
                    <input class=""form-control"" id=""fechaNac"" type=""date""/>
                </div>
            </div>
            <div class=""form-group row"">
                <label for=""descripcion"" class=""col-sm-3 col-form-label text-center"">Genero:</label>
                <div class=""col-sm-9"">
                    <select class=""form-control"" name=""genero"" id=""genero"">
                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e4e8a1ea476f18da6b91dbb5d5a13f2b66f95ae413407", async() => {
                    WriteLiteral("Selecciona un Genero");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e4e8a1ea476f18da6b91dbb5d5a13f2b66f95ae414669", async() => {
                    WriteLiteral("Masculino");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e4e8a1ea476f18da6b91dbb5d5a13f2b66f95ae415920", async() => {
                    WriteLiteral("Femenino");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                    </select>
                </div>
            </div>
            <p class=""text-danger"" name=""validador"" id=""validador""></p>
            <div class=""form-group row"">
                <p class=""col-sm-3""></p>
                <button type=""button"" class=""btn btn-warning col-sm-4"" onclick=""validar()"">Cotizar</button>
            </div>

        </div>
    ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
</div>

<script>
        //-------------------------------------------------------MARCA
        const selectMarcas = document.querySelector('#Marca');

        selectMarcas.addEventListener('change', (event) => {

            const textMarca = selectMarcas.options[selectMarcas.selectedIndex].text;

            const valueMarca = selectMarcas.value;

            if(textMarca != 'Selecciona una Marca'){
                //limpiar combos dependientes de marca
                $(""#submarca"").find('option').not(':first').remove();
                $(""#modelo"").find('option').not(':first').remove();
                $(""#descripcion"").find('option').not(':first').remove();


                $.ajax({
                    type:""POST"", // la variable type guarda el tipo de la peticion GET,POST,..
                    url:""https://apitestcotizamatico.azurewebsites.net/api/catalogos"", //url guarda la ruta hacia donde se hace la peticion
                    data:{
                            ""NombreCata");
            WriteLiteral(@"logo"": ""Submarca"",
                            ""Filtro"": valueMarca,
                            ""IdAplication"": 2
                    }, // data recive un objeto con la informacion que se enviara al servidor
                    success:function(submarca){ //success es una funcion que se utiliza si el servidor retorna informacion
                        
                        const catalogoSubmarcas = JSON.parse(submarca.CatalogoJsonString) 
                        
                        var selectSubmarca = document.querySelector('#submarca');

                        $(""#submarca"").find('option').not(':first').remove();

                        for(const [key, value] of Object.entries(catalogoSubmarcas)){
                            var option = document.createElement('option');
                            option.text = value.sSubMarca;
                            option.value = value.iIdSubMarca;
                            selectSubmarca.add(option);
                        }


   ");
            WriteLiteral(@"                 },
                    dataType: ""json"" // El tipo de datos esperados del servidor. Valor predeterminado: Intelligent Guess (xml, json, script, text, html).
                });
            }

        });
        //-------------------------------------------------SubMarca
        const selectSubMarcas = document.querySelector('#submarca');

        selectSubMarcas.addEventListener('change', (event) => {
                
            $(""#modelo"").find('option').not(':first').remove();
            $(""#descripcion"").find('option').not(':first').remove();

            const textSubMarca = selectSubMarcas.options[selectSubMarcas.selectedIndex].text;

            const valueSubMarca = selectSubMarcas.value;

            if(textSubMarca != 'Selecciona una Submarca'){

                $.ajax({
                    type:""POST"", // la variable type guarda el tipo de la peticion GET,POST,..
                    url:""https://apitestcotizamatico.azurewebsites.net/api/catalogos"", //url gu");
            WriteLiteral(@"arda la ruta hacia donde se hace la peticion
                    data:{
                            ""NombreCatalogo"": ""Modelo"",
                            ""Filtro"": valueSubMarca,
                            ""IdAplication"": 2
                    }, // data recive un objeto con la informacion que se enviara al servidor
                    success:function(modelo){ //success es una funcion que se utiliza si el servidor retorna informacion
                        
                        const catalogoModelo= JSON.parse(modelo.CatalogoJsonString) 
                        
                        var selectModelo = document.querySelector('#modelo');

                        $(""#modelo"").find('option').not(':first').remove();

                        for(const [key, value] of Object.entries(catalogoModelo)){
                            var option = document.createElement('option');
                            option.text = value.sModelo;
                            option.value = value.iIdModelo;");
            WriteLiteral(@"
                            selectModelo.add(option);
                        }


                    },
                    dataType: ""json"" // El tipo de datos esperados del servidor. Valor predeterminado: Intelligent Guess (xml, json, script, text, html).
                });
            }

        });

        //---------------------------------------Modelo
        const selectModelo = document.querySelector('#modelo');

        selectModelo.addEventListener('change', (event) => {
            $(""#descripcion"").find('option').not(':first').remove();

            const textModelo = selectModelo.options[selectModelo.selectedIndex].text;

            const valueModelo = selectModelo.value;

            if(textModelo != 'Selecciona un Modelo'){

                $.ajax({
                    type:""POST"", // la variable type guarda el tipo de la peticion GET,POST,..
                    url:""https://apitestcotizamatico.azurewebsites.net/api/catalogos"", //url guarda la ruta hacia donde se ");
            WriteLiteral(@"hace la peticion
                    data:{
                            ""NombreCatalogo"": ""DescripcionModelo"",
                            ""Filtro"": valueModelo,
                            ""IdAplication"": 2
                    }, // data recive un objeto con la informacion que se enviara al servidor
                    success:function(descripcion){ //success es una funcion que se utiliza si el servidor retorna informacion
                        
                        const catalogoDescripcion= JSON.parse(descripcion.CatalogoJsonString) 
                        
                        var selectDescripcion = document.querySelector('#descripcion');

                        $(""#descripcion"").find('option').not(':first').remove();

                        for(const [key, value] of Object.entries(catalogoDescripcion)){
                            var option = document.createElement('option');
                            option.text = value.sDescripcion;
                            option.val");
            WriteLiteral(@"ue = value.iIdDescripcionModelo;
                            selectDescripcion.add(option);
                        }


                    },
                    dataType: ""json"" // El tipo de datos esperados del servidor. Valor predeterminado: Intelligent Guess (xml, json, script, text, html).
                });
            }

        });

        //---------------------------------------evento de cp---------
        function search(ele) {
            
            //event.preventDefault();
            
            if(event.key === 'Enter') {
                
                $.ajax({
                    type:""POST"", // la variable type guarda el tipo de la peticion GET,POST,..
                    url:""https://apitestcotizamatico.azurewebsites.net/api/catalogos"", //url guarda la ruta hacia donde se hace la peticion
                    data:{
                            ""NombreCatalogo"": ""Sepomex"",
                            ""Filtro"": ele.value,
                            ""IdAplicat");
            WriteLiteral(@"ion"": 2
                    }, // data recive un objeto con la informacion que se enviara al servidor
                    success:function(cp){ //success es una funcion que se utiliza si el servidor retorna informacion
                        
                        const catalogoCP = JSON.parse(cp.CatalogoJsonString); 
                        
                        const inputEstado = document.querySelector('#estado');
                        const inputMunicipio = document.querySelector('#municipio')
                        const inputColonia = document.querySelector('#colonia')

                        for(const [key, value] of Object.entries(catalogoCP)){

                            inputEstado.value = value.Municipio.Estado.sEstado;    
                            inputMunicipio.value = value.Municipio.sMunicipio;
                            inputColonia.value = value.Ubicacion[0].sUbicacion;
                        }

                    },
                    dataType: ""json"" // E");
            WriteLiteral(@"l tipo de datos esperados del servidor. Valor predeterminado: Intelligent Guess (xml, json, script, text, html).
                });
            
            }
        }


        function validar(){
            let validador = document.querySelector('#validador');

            const selectMarca = document.querySelector('#Marca');
            const textoMarca = selectMarca.options[selectMarca.selectedIndex].text;
            
            if(textoMarca == 'Seleccione una Marca'){
                validador.textContent = 'Debe Seleccionar una Marca';            
            }

            const selectSubmarca = document.querySelector('#submarca');
            const textSubmarca = selectSubmarca.options[selectSubmarca.selectedIndex].text;

            if(textSubmarca == 'Selecciona una Submarca'){
                validador.textContent = 'Debe Seleccionar una Submarca';           
            }

            const selectModelo = document.querySelector('#modelo');
            const textModel");
            WriteLiteral(@"o = selectModelo.options[selectModelo.selectedIndex].text;

            if(textModelo == 'Selecciona un Modelo'){
                validador.textContent = 'Debe Seleccionar un Modelo';           
            }

            const selectDescripcion = document.querySelector('#descripcion');
            const textDescripcion = selectDescripcion.options[selectDescripcion.selectedIndex].text;

            if(textDescripcion == 'Selecciona una Descripción'){
                validador.textContent = 'Debe Seleccionar una Descripción';           
            }

            const inputCP = document.querySelector('#cp');
            const textCP = inputCP.value;

            if(textCP == ''){
                validador.textContent = 'Debe Seleccionar una Ubicación Válida';           
            }

            const tiempoTranscurrido = Date.now();
            const hoy = new Date(tiempoTranscurrido);
            const hoyLocal = hoy.toLocaleDateString();
            const annoAct = hoyLocal.substrin");
            WriteLiteral(@"g(hoyLocal.length,(hoyLocal.length-4))
     
            const fechaNac = document.querySelector('#fechaNac').value;

            const annoNac = fechaNac.substring(0, 4);

            console.log(annoNac);

            if(annoAct-annoNac < 18 | annoNac == ''){
                validador.textContent = 'Debe Tener más de 18 Años';           
            }
            
            const selectGenero = document.querySelector('#genero');
            const textoGenero = selectGenero.options[selectGenero.selectedIndex].text;
            
            if(textoGenero == 'Selecciona un Genero'){
                validador.textContent = 'Debe Seleccionar un Genero';            
            }

        }


</script>

");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<ConsumirAPI.Models.Marcas> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
